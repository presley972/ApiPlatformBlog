security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: argon2i

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            stateless: true
            anonymous: true
            provider: app_user_provider
            json_login:
                check_path: /authentication_token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnabledChecker

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
#        - { path: ^/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY}
#        - { path: ^/confirm-user, roles: IS_AUTHENTICATED_ANONYMOUSLY}
#        - { path: ^/utilisateurs, roles: IS_AUTHENTICATED_ANONYMOUSLY}
#        - { path: ^/, roles: IS_AUTHENTICATED_FULLY}

    role_hierarchy:
        ROLE_WRITER: ROLE_COMMENTATOR
        ROLE_USER: ROLE_WRITER
        ROLE_ADMIN: [ROLE_WRITER, ROLE_EDITOR]
        ROLE_SUPERADMIN: ROLE_ADMIN
